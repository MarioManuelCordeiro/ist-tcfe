.options savecurrents

.include gen_cir.cir

.op
.end

.control
*makes plots in color
set hcopypscolor=0
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0
set units=degrees


* op analysis


*print v(coll)-v(base)
*print v(emit2)-v(coll)
*print v(coll)

* time analysis
tran 1e-5 1e-2
plot v(out) v(in)
hardcopy vo1.ps v(out) v(in)


* frequency analysis
ac dec 10 10 100MEG
plot vdb(out)
plot vp(out)
hardcopy vo1f.ps vdb(out)
hardcopy vo1f.ps vdb(out)-vdb(in)

plot (180/pi*phase(v(out)/v(in)))
hardcopy phase.eps (180/pi*phase(v(out)/v(in)))


meas AC max MAX vdb(out) from=10 to=100MEG
let max_gain = max - vdb(in)
let range = max - 3

meas AC lower WHEN vdb(out) = range
meas AC upper WHEN vdb(out) = range CROSS=LAST
let centralfreq = sqrt(lower*upper)
let centralfreq_deviation = abs(1000 - centralfreq)

meas AC central_vout FIND v(out) AT=1000
meas AC central_vin  FIND v(in)  AT=1000
meas AC central_current_vin  FIND i(Vin)  AT=1000
let central_gain = central_vout/central_vin
let central_gain_deviation = abs(central_gain - 100) 


let bandwidth = upper-lower
let quality = 1/(central_gain_deviation + centralfreq_deviation + 0.000001)
let cost_amp_op = 13323.29209
let total_cost = cost_amp_op + 303.66
let merit = quality/total_cost

echo "resultados_TAB"
echo "V Gain (1KHz) = $&central_gain"
echo "Bandwidth = $&bandwidth"
echo "Central frequency = $&centralfreq"
echo "frequency desviation = $&centralfreq_deviation"
echo "Central gain deviation = $&central_gain_deviation"
echo "Cost = $&total_cost"
echo "merit = $&merit"
echo "resultados_END"

let InpImp = v(in)[20]/i(Vin)[20]*0.001
*let InpImp = central_vin/central_current_vin/1000
let InpImp_Real = Re(-InpImp)
let InpImp_Img = Im(-InpImp)
echo "Input_Impendence_TAB"
echo "Input Impendence = $&InpImp_Real + $&InpImp_Img i KOhm"
echo "Input_Impendence_END"

plot vdb(out) vecmax(vdb(out))-3
plot vp(out)
hardcopy vo2f.ps vdb(out) vecmax(vdb(out))-3

*input impedance in kohm
*print v(in2)[40]/(v(in)[40]-v(in2)[40])*100/1000
*print v(in2)[40]/(v(dummy1)[40]-v(dummy0)[40])*100/1000

let lower_bond 	= vecmax(vdb(out))-3

meas ac f1 WHEN vdb(out)=lower_bond RISE=1
meas ac f2 WHEN vdb(out)=lower_bond CROSS=LAST

print vecmax(vdb(out))-3

*need a different setup to measure output impedance

.endc 
